server {
    listen 80;
    listen [::]:80;

    server_name {{DOMAIN_NAME_AUTH}};
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # redirect all http traffic to https
        return 301 https://{{DOMAIN_NAME_AUTH}}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{DOMAIN_NAME_AUTH}};

    ssl_certificate /etc/nginx/ssl/live/{{DOMAIN_NAME_AUTH}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{{DOMAIN_NAME_AUTH}}/privkey.pem;

    location /munin/static/ {
        alias /etc/munin/static/;
        expires modified +1w;
    }

    location /munin/ {
        auth_basic            "Restricted";
        auth_basic_user_file  /etc/nginx/conf.d/htpasswd;

        alias /var/cache/munin/www/;
        expires modified +310s;
    }

    location / {
        # the domain name in the docker network
        # is called like the service defined
        # the docker-compose.yml (superlogin)
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://superlogin:3000/;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name {{DOMAIN_NAME_FLIPMOUSE}};
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # redirect all http traffic to https
        return 301 https://{{DOMAIN_NAME_FLIPMOUSE}}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{DOMAIN_NAME_FLIPMOUSE}};

    ssl_certificate /etc/nginx/ssl/live/{{DOMAIN_NAME_FLIPMOUSE}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{{DOMAIN_NAME_FLIPMOUSE}}/privkey.pem;

    location / {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui/index_fm.htm;
    }

    location ~* /.+$ {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name {{DOMAIN_NAME_FLIPPAD}};
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # redirect all http traffic to https
        return 301 https://{{DOMAIN_NAME_FLIPPAD}}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{DOMAIN_NAME_FLIPPAD}};

    ssl_certificate /etc/nginx/ssl/live/{{DOMAIN_NAME_FLIPPAD}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{{DOMAIN_NAME_FLIPPAD}}/privkey.pem;

    location / {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui/index_pad.htm;
    }

    location ~* /.+$ {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name {{DOMAIN_NAME_FABI}};
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        # redirect all http traffic to https
        return 301 https://{{DOMAIN_NAME_FABI}}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{DOMAIN_NAME_FABI}};

    ssl_certificate /etc/nginx/ssl/live/{{DOMAIN_NAME_FABI}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{{DOMAIN_NAME_FABI}}/privkey.pem;

    location / {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui/index_fabi.htm;
    }

    location ~* /.+$ {
        proxy_pass https://asterics.github.io/Addon-Bluetooth-WebGUI/webgui$request_uri;
    }
}