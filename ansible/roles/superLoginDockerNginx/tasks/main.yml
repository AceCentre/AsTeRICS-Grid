#####
###  DOCKER NGINX
#
---
- debug:
    msg: START DOCKER NGINX...

- name: create folder ./nginx/conf/
  file:
    path: ./nginx/conf/
    state: directory
  register: result
- name: debug [create folder ./nginx/conf/]
  debug:
    var: result

- name: copy files local to remote (100-couchdb.conf)
  template:
    src: 100-couchdb-conf
    dest: /etc/security/limits.d/100-couchdb.conf
  register: result
- name: debug [copy files local to remote with a template (100-couchdb.conf)]
  debug:
    var: result

- name: check if certificate exists
  become: true
  shell: 'docker compose run nginx test -e /etc/nginx/ssl/live/{{DOMAIN_NAME}}/fullchain.pem && echo 1 || echo 0'
  # if "0" certificate does not exist, if "1" certificate exists
  register: hasAValidCertificateSuperLogin
- name: debug [check if certificate exists]
  debug:
    var: hasAValidCertificateSuperLogin

- name: copy files local to remote with a template (superloginHttpCreateCert)
  template:
    src: superLoginHttpCreateCert
    dest: ./nginx/conf/superLoginHttpCreateCert.conf
  register: result
  # if "0" certificate does not exist, we need to create a certificate config
  when: hasAValidCertificateSuperLogin.stdout == "0"
- name: debug [copy files local to remote with a template (superloginHttpCreateCert)]
  debug:
    var: result

- name: copy htpasswd file
  template:
    src: htpasswd
    dest: ./nginx/conf/htpasswd
  register: result
- name: debug [copy htpasswd file]
  debug:
    var: result

- name: docker pull nginx
  become: true
  shell: 'docker pull {{DOCKER_NGINX_IMAGE}}'
  register: result
- name: debug [docker pull nginx]
  debug:
    var: result

- name: docker pull certbot
  become: true
  shell: 'docker pull {{DOCKER_CERTBOT_IMAGE}}'
  register: result
- name: debug [docker pull certbot]
  debug:
    var: result

- name: build couch-auth
  become: true
  shell: 'docker build ./{{REPO_NAME}} -t couch-auth:latest'
  register: result
- name: debug [build couch-auth]
  debug:
    var: result

- name: stop docker images
  become: true
  shell: 'docker compose down'
  register: result
- name: debug [stop docker images]
  debug:
    var: result

- name: start superlogin, nginx, and certbot with docker-compose up
  become: true
  shell: 'docker compose -f ./docker-compose.yml up --detach --remove-orphans'
  register: result
- name: debug [start superlogin, nginx, and certbot with docker-compose up]
  debug:
    var: result

- name: reload nginx config
  become: true
  shell: 'docker compose exec nginx nginx -s reload'
  register: result
- name: debug [reload nginx config]
  debug:
    var: result

- debug:
    msg: END DOCKER NGINX...
